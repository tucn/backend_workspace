# SLA and Compliance Configuration
# This file defines Service Level Agreements, compliance requirements, and performance targets

# Service Level Agreements (SLAs)
sla:
  # Build Performance SLAs
  build:
    # Build time targets
    duration:
      target: 300        # 5 minutes
      warning: 600       # 10 minutes
      critical: 900      # 15 minutes
    
    # Build success rate
    success_rate:
      target: 99.5       # 99.5%
      warning: 98.0      # 98%
      critical: 95.0     # 95%
    
    # Resource utilization
    resources:
      cpu_max: 80        # Max 80% CPU usage
      memory_max: 85     # Max 85% memory usage
      disk_max: 90       # Max 90% disk usage

  # Security SLAs
  security:
    # Vulnerability response time
    response_time:
      critical: 3600     # 1 hour
      high: 86400        # 24 hours
      medium: 604800     # 1 week
      low: 2592000       # 30 days
    
    # Scan completion time
    scan_time:
      target: 300        # 5 minutes
      warning: 600       # 10 minutes
      critical: 1800     # 30 minutes
    
    # Patch deployment time
    patch_time:
      critical: 3600     # 1 hour
      high: 86400        # 24 hours
      medium: 604800     # 1 week

  # Deployment SLAs
  deployment:
    # Deployment time
    time:
      target: 300        # 5 minutes
      warning: 600       # 10 minutes
      critical: 1800     # 30 minutes
    
    # Rollback time
    rollback_time:
      target: 120        # 2 minutes
      warning: 300       # 5 minutes
      critical: 600      # 10 minutes
    
    # Availability
    availability:
      target: 99.9       # 99.9%
      warning: 99.5      # 99.5%
      critical: 99.0     # 99.0%

# Compliance Standards
compliance:
  # SLSA (Supply Chain Levels for Software Artifacts)
  slsa:
    target_level: 3      # Target SLSA Level 3
    requirements:
      - "Builds are reproducible"
      - "Builds are hermetic"
      - "Builds are provenance-based"
      - "Builds are attested"
      - "Builds are verified"
    
    # SLSA Level 3 specific requirements
    level_3:
      - "Source code is version controlled"
      - "Builds are performed in isolated environments"
      - "Builds use verified dependencies"
      - "Builds generate provenance"
      - "Builds are signed and attested"
      - "Builds are verified against policy"

  # NIST Cybersecurity Framework
  nist:
    framework: "2.0"
    functions:
      identify:
        - "Asset inventory management"
        - "Risk assessment"
        - "Governance"
      protect:
        - "Access control"
        - "Data security"
        - "Maintenance"
      detect:
        - "Continuous monitoring"
        - "Anomaly detection"
        - "Incident detection"
      respond:
        - "Incident response planning"
        - "Communications"
        - "Analysis"
      recover:
        - "Recovery planning"
        - "Improvements"
        - "Communications"

  # ISO 27001 Information Security
  iso27001:
    controls:
      - "Information security policies"
      - "Organization of information security"
      - "Human resource security"
      - "Asset management"
      - "Access control"
      - "Cryptography"
      - "Physical and environmental security"
      - "Operations security"
      - "Communications security"
      - "System acquisition, development and maintenance"
      - "Supplier relationships"
      - "Information security incident management"
      - "Information security aspects of business continuity management"
      - "Compliance"

  # SOC 2 Type II
  soc2:
    trust_services_criteria:
      security:
        - "Logical and physical access controls"
        - "System operations"
        - "Change management"
      availability:
        - "System availability"
        - "Performance monitoring"
        - "Capacity planning"
      processing_integrity:
        - "Input validation"
        - "Processing accuracy"
        - "Output validation"
      confidentiality:
        - "Data classification"
        - "Encryption"
        - "Access controls"
      privacy:
        - "Data collection"
        - "Data retention"
        - "Data disposal"

# Security Requirements
security:
  # Image Security
  image:
    base_image:
      allowed_registries:
        - "ghcr.io"
        - "docker.io"
        - "cgr.dev"
      allowed_base_images:
        - "chainguard/static"
        - "distroless/static"
        - "alpine"
    
    # Image scanning requirements
    scanning:
      required: true
      tools:
        - "grype"
        - "trivy"
        - "snyk"
      frequency: "on-build"
      fail_on: "high"
    
    # Image signing requirements
    signing:
      required: true
      method: "cosign"
      keyless: true
      attestations:
        - "slsaprovenance"
        - "spdx"
        - "vuln"

  # Code Security
  code:
    # Static analysis
    static_analysis:
      required: true
      tools:
        - "gosec"
        - "staticcheck"
        - "semgrep"
      fail_on: "high"
    
    # Dependency scanning
    dependency_scanning:
      required: true
      tools:
        - "govulncheck"
        - "npm audit"
        - "safety"
      frequency: "daily"
      fail_on: "high"

  # Runtime Security
  runtime:
    # Container runtime security
    container:
      no_root: true
      read_only_root: true
      no_privileged: true
      no_new_privileges: true
      drop_capabilities:
        - "ALL"
    
    # Network security
    network:
      no_host_network: true
      no_host_pid: true
      no_host_ipc: true

# Monitoring and Alerting
monitoring:
  # Metrics collection
  metrics:
    - "build_duration"
    - "build_success_rate"
    - "vulnerability_count"
    - "patch_deployment_time"
    - "compliance_score"
    - "sla_breaches"
  
  # Alerting thresholds
  alerts:
    sla_breach:
      warning: 1         # Warning after 1 breach
      critical: 3        # Critical after 3 breaches
    
    vulnerability_increase:
      warning: 10        # Warning if vulnerabilities increase by 10
      critical: 25       # Critical if vulnerabilities increase by 25
    
    build_failure_rate:
      warning: 5         # Warning if failure rate > 5%
      critical: 10       # Critical if failure rate > 10%

# Reporting Requirements
reporting:
  # Compliance reports
  compliance:
    frequency: "monthly"
    format: "markdown"
    recipients:
      - "security-team@company.com"
      - "compliance@company.com"
  
  # SLA reports
  sla:
    frequency: "weekly"
    format: "markdown"
    recipients:
      - "devops@company.com"
      - "management@company.com"
  
  # Security reports
  security:
    frequency: "daily"
    format: "json"
    recipients:
      - "security-team@company.com"
      - "oncall@company.com"

# Policy Enforcement
policy:
  # OPA policies
  opa:
    enabled: true
    policies:
      - "slsa-compliance"
      - "image-security"
      - "code-quality"
      - "runtime-security"
    
    # Policy evaluation
    evaluation:
      mode: "enforce"    # enforce, dry-run, report
      fail_on_violation: true
  
  # Gate checks
  gates:
    - "vulnerability_scan"
    - "image_signing"
    - "slsa_attestation"
    - "compliance_check"
    - "sla_verification"

# Remediation
remediation:
  # Automatic remediation
  auto:
    enabled: true
    scope:
      - "critical_vulnerabilities"
      - "sla_breaches"
      - "compliance_violations"
    
    # Remediation actions
    actions:
      critical_vulnerabilities:
        - "auto_patch"
        - "rollback"
        - "alert"
      sla_breaches:
        - "scale_resources"
        - "optimize_builds"
        - "alert"
      compliance_violations:
        - "block_deployment"
        - "generate_ticket"
        - "alert"
  
  # Manual remediation
  manual:
    escalation:
      level_1: "oncall@company.com"
      level_2: "security-team@company.com"
      level_3: "management@company.com"
    
    timeouts:
      level_1: 3600      # 1 hour
      level_2: 7200      # 2 hours
      level_3: 14400     # 4 hours
